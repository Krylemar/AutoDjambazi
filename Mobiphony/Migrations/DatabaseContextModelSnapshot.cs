// <auto-generated />
using Mobiphony.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mobiphony.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mobiphony.Models.Phones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BatCapacity")
                        .HasColumnType("float");

                    b.Property<double>("BatChargingWattage")
                        .HasColumnType("float");

                    b.Property<double>("BluetoothVersion")
                        .HasColumnType("float");

                    b.Property<double>("Brightness")
                        .HasColumnType("float");

                    b.Property<string>("CPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chipset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Dsize")
                        .HasColumnType("float");

                    b.Property<double>("ExpStorageLimit")
                        .HasColumnType("float");

                    b.Property<bool>("FaceRec")
                        .HasColumnType("bit");

                    b.Property<bool>("FingerPrint")
                        .HasColumnType("bit");

                    b.Property<string>("GPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IPRating")
                        .HasColumnType("int");

                    b.Property<double>("InternalStorage")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("MCFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MCMP")
                        .HasColumnType("float");

                    b.Property<string>("MCVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Matrix")
                        .HasColumnType("float");

                    b.Property<bool>("NFC")
                        .HasColumnType("bit");

                    b.Property<string>("OS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RAM")
                        .HasColumnType("int");

                    b.Property<double>("RefreshRate")
                        .HasColumnType("float");

                    b.Property<double>("Resolution")
                        .HasColumnType("float");

                    b.Property<string>("SCFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SCMP")
                        .HasColumnType("float");

                    b.Property<string>("SCVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SIM")
                        .HasColumnType("int");

                    b.Property<string>("ScrProtection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Thickness")
                        .HasColumnType("float");

                    b.Property<string>("USBType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("USBVersion")
                        .HasColumnType("float");

                    b.Property<double>("WiFiSpeed")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
